{
  "aws.acm": {
    "certificates_expiry": {
      "what": "Are certificates expiring soon?",
      "why": "Expired certificates can make services inaccessible for your customers.",
      "somedomain.commendation": "somedomain.commended to enable AutoRenew option or renew manually before certificates expiry",
      "regions": {
        "us-east-2": [],
        "us-east-1": [
          {
            "resource": {
              "DomainName": "somedomain.com",
              "CertificateArn": "arn:aws:acm:us-east-1:123456789012:certificate/4a2750cd-35bb-4970-a0d6-270fc81d2247"
            },
            "resourceSummary": {
              "name": "Certificate",
              "value": "somedomain.com | 4a2750cd-35bb-4970-a0d6-270fc81d2247"
            },
            "severity": 3,
            "message": "Certicate is valid for more than 3 months"
          }
        ],
        "us-west-1": [],
        "us-west-2": [],
        "ca-central-1": [],
        "ap-south-1": [
          {
            "resource": {
              "DomainName": "somedomain.com",
              "CertificateArn": "arn:aws:acm:ap-south-1:123456789012:certificate/4a2750cd-35bb-4970-a0d6-270fc81d2247"
            },
            "resourceSummary": {
              "name": "Certificate",
              "value": "somedomain.com | 4a2750cd-35bb-4970-a0d6-270fc81d2247"
            },
            "severity": 3,
            "message": "Certicate is valid for more than 3 months"
          },
          {
            "resource": {
              "DomainName": "somedomain.com",
              "CertificateArn": "arn:aws:acm:ap-south-1:123456789012:certificate/4a2750cd-35bb-4970-a0d6-270fc81d2247"
            },
            "resourceSummary": {
              "name": "Certificate",
              "value": "somedomain.com | 4a2750cd-35bb-4970-a0d6-270fc81d2247"
            },
            "severity": 3,
            "message": "Certicate is valid for more than 3 months"
          }
        ],
        "ap-northeast-2": [],
        "ap-southeast-1": [],
        "ap-southeast-2": [],
        "ap-northeast-1": [],
        "eu-central-1": [],
        "eu-west-1": [],
        "eu-west-2": [],
        "sa-east-1": []
      }
    }
  },
  "aws.ebs": {
    "volumes_encrypted_at_rest": {
      "what": "Are EBS volumes encrypted at rest?",
      "why": "Data at rest should always be encrypted",
      "somedomain.commendation": "somedomain.commended to enable encryption for EBS volumes",
      "regions": {
        "us-east-2": [],
        "us-east-1": [],
        "us-west-1": [],
        "us-west-2": [],
        "ca-central-1": [],
        "ap-south-1": [],
        "ap-northeast-2": [],
        "ap-southeast-1": [],
        "ap-southeast-2": [],
        "ap-northeast-1": [],
        "eu-central-1": [],
        "eu-west-1": [],
        "eu-west-2": [],
        "sa-east-1": []
      }
    }
  },
  "aws.ec2": {
    "security_groups_open_to_world": {
      "what": "Are there any security groups open to world?",
      "why": "Security group open to world posses serious security threat so we need to allow only intended parties to access",
      "somedomain.commendation": "somedomain.commended to configure security groups as tight as needed",
      "regions": {
        "us-east-2": [
          {
            "resource": {
              "Description": "launch-wizard-2 created 2018-01-02T17:49:00.484+05:30",
              "GroupName": "launch-wizard-2",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "launch-wizard-2 | sg-1234567abc"
            },
            "severity": 0,
            "message": "Security group is open to entire world",
            "action": "Remove rule containing IP range: 0.0.0.0/0."
          },
          {
            "resource": {
              "Description": "launch-wizard-1 created 2017-12-19T14:46:01.847+05:30",
              "GroupName": "demo-sg",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "202.83.0.0/32",
                      "Description": ""
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "demo-sg | sg-1234567abc"
            },
            "severity": 3,
            "message": "Security group is restricted to few IP ranges"
          },
          {
            "resource": {
              "Description": "launch-wizard-1 created 2018-01-02T15:39:16.158+05:30",
              "GroupName": "launch-wizard-1",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "launch-wizard-1 | sg-1234567abc"
            },
            "severity": 0,
            "message": "Security group is open to entire world",
            "action": "Remove rule containing IP range: 0.0.0.0/0."
          }
        ],
        "us-east-1": [
          {
            "resource": {
              "Description": "launch-wizard-2 created 2018-01-02T15:27:32.619+05:30",
              "GroupName": "launch-wizard-2",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "launch-wizard-2 | sg-1234567abc"
            },
            "severity": 0,
            "message": "Security group is open to entire world",
            "action": "Remove rule containing IP range: 0.0.0.0/0."
          },
          {
            "resource": {
              "Description": "sg-1234567abc-traffice",
              "GroupName": "sg_all",
              "IpPermissions": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "sg_all | sg-1234567abc"
            },
            "severity": 0,
            "message": "Security group is open to entire world",
            "action": "Remove rule containing IP range: 0.0.0.0/0."
          },
          {
            "resource": {
              "Description": "csr security group",
              "GroupName": "sg_csr",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": -1,
                  "IpProtocol": "icmp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": -1,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "sg_csr | sg-1234567abc"
            },
            "severity": 0,
            "message": "Security group is open to entire world",
            "action": "Remove rule containing IP range: 0.0.0.0/0."
          },
          {
            "resource": {
              "Description": "launch-wizard-4 created 2018-02-27T12:55:40.527+05:30",
              "GroupName": "somesg",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": -1,
                  "IpProtocol": "icmp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": -1,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "somesg | sg-1234567abc"
            },
            "severity": 0,
            "message": "Security group is open to entire world",
            "action": "Remove rule containing IP range: 0.0.0.0/0."
          },
          {
            "resource": {
              "Description": "launch-wizard-3 created 2018-02-23T16:58:44.420+05:30",
              "GroupName": "launch-wizard-3",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "launch-wizard-3 | sg-1234567abc"
            },
            "severity": 0,
            "message": "Security group is open to entire world",
            "action": "Remove rule containing IP range: 0.0.0.0/0."
          }
        ],
        "us-west-1": [],
        "us-west-2": [],
        "ca-central-1": [],
        "ap-south-1": [
          {
            "resource": {
              "Description": "launch-wizard-1 created 2018-07-02T12:41:30.777+05:30",
              "GroupName": "WinServer",
              "IpPermissions": [
                {
                  "FromPort": 3389,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 3389,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "WinServer | sg-1234567abc"
            },
            "severity": 0,
            "message": "Security group is open to entire world",
            "action": "Remove rule containing IP range: 0.0.0.0/0."
          },
          {
            "resource": {
              "Description": "outside interfacing subnets",
              "GroupName": "SEC_outside 1a",
              "IpPermissions": [
                {
                  "FromPort": 80,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": 80,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 443,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": 443,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "SEC_outside_1a"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "SEC_outside 1a | sg-1234567abc"
            },
            "severity": 0,
            "message": "Security group is open to entire world",
            "action": "Remove rule containing IP range: 0.0.0.0/0."
          },
          {
            "resource": {
              "Description": "Application subnets 1a",
              "GroupName": "Application 1a",
              "IpPermissions": [
                {
                  "FromPort": 80,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.1.5/32"
                    },
                    {
                      "CidrIp": "10.30.3.0/24"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 80,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.1.5/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 3389,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.1.5/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 3389,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 443,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.1.5/32"
                    },
                    {
                      "CidrIp": "10.30.3.0/24"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 443,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "SEC_Application_1a"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "Application 1a | sg-1234567abc"
            },
            "severity": 3,
            "message": "Security group is restricted to few IP ranges"
          },
          {
            "resource": {
              "Description": "sg_shared created 2018-06-29T17:02:45.431+05:30",
              "GroupName": "sg_shared",
              "IpPermissions": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "Shared_SG"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "sg_shared | sg-1234567abc"
            },
            "severity": 0,
            "message": "Security group is open to entire world",
            "action": "Remove rule containing IP range: 0.0.0.0/0."
          },
          {
            "resource": {
              "Description": "SomeApp subnets for 1a",
              "GroupName": "SomeApp 1a",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "14.142.0.0/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 4444,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "14.142.0.0/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 4444,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 2214,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "14.142.0.0/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 2214,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 2222,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "14.142.0.0/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 2222,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 2242,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "14.142.0.0/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 2242,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 3389,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "14.142.0.0/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 3389,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "SEC_SomeApp"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "SomeApp 1a | sg-1234567abc"
            },
            "severity": 3,
            "message": "Security group is restricted to few IP ranges"
          },
          {
            "resource": {
              "Description": "Inside subnet containing internal interfaces for outside subnets",
              "GroupName": "SEC_Inside1a",
              "IpPermissions": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.1.0/24",
                      "Description": ""
                    },
                    {
                      "CidrIp": "10.30.2.0/24",
                      "Description": ""
                    },
                    {
                      "CidrIp": "10.30.3.0/24",
                      "Description": ""
                    },
                    {
                      "CidrIp": "10.30.4.0/24",
                      "Description": ""
                    },
                    {
                      "CidrIp": "10.30.5.0/24",
                      "Description": ""
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "SEC_Inside_1a"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "SEC_Inside1a | sg-1234567abc"
            },
            "severity": 3,
            "message": "Security group is restricted to few IP ranges"
          },
          {
            "resource": {
              "Description": "DB subnets 1a",
              "GroupName": "Database 1a",
              "IpPermissions": [
                {
                  "FromPort": 1521,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.3.0/24"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 1521,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.1.5/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "SEC_DB_1a"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "Database 1a | sg-1234567abc"
            },
            "severity": 3,
            "message": "Security group is restricted to few IP ranges"
          },
          {
            "resource": {
              "Description": "Core services subnets 1a",
              "GroupName": "Core Services 1a",
              "IpPermissions": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.1.0/24"
                    },
                    {
                      "CidrIp": "10.30.2.0/24"
                    },
                    {
                      "CidrIp": "10.30.3.0/24"
                    },
                    {
                      "CidrIp": "10.30.4.0/24"
                    },
                    {
                      "CidrIp": "10.30.5.0/24"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "SEC_Coreservices_1a"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "Core Services 1a | sg-1234567abc"
            },
            "severity": 3,
            "message": "Security group is restricted to few IP ranges"
          },
          {
            "resource": {
              "Description": "WAN interfacing subnets 1a",
              "GroupName": "WAN 1a",
              "IpPermissions": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.1.0/24"
                    },
                    {
                      "CidrIp": "10.30.2.0/24"
                    },
                    {
                      "CidrIp": "10.30.3.0/24"
                    },
                    {
                      "CidrIp": "10.30.4.0/24"
                    },
                    {
                      "CidrIp": "10.30.5.0/24"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "SEC_WAN_1a"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "WAN 1a | sg-1234567abc"
            },
            "severity": 3,
            "message": "Security group is restricted to few IP ranges"
          }
        ],
        "ap-northeast-2": [],
        "ap-southeast-1": [
          {
            "resource": {
              "Description": "launch-wizard-1 created 2018-06-07T19:22:59.014+05:30",
              "GroupName": "replication-bastion",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "bastion"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "replication-bastion | sg-1234567abc"
            },
            "severity": 0,
            "message": "Security group is open to entire world",
            "action": "Remove rule containing IP range: 0.0.0.0/0."
          },
          {
            "resource": {
              "Description": "Created from the RDS Management Console: 2018/06/07 12:21:14",
              "GroupName": "rds-launch-wizard",
              "IpPermissions": [
                {
                  "FromPort": 3306,
                  "IpProtocol": "tcp",
                  "IpRanges": [],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 3306,
                  "UserIdGroupPairs": [
                    {
                      "GroupId": "sg-1234567abc",
                      "UserId": "123456789012"
                    }
                  ]
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "rds"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "rds-launch-wizard | sg-1234567abc"
            },
            "severity": 3,
            "message": "Security group is restricted to few IP ranges"
          },
          {
            "resource": {
              "Description": "For DMS",
              "GroupName": "DMS",
              "IpPermissions": [],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "DMS SG"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "DMS | sg-1234567abc"
            },
            "severity": 3,
            "message": "Security group is restricted to few IP ranges"
          },
          {
            "resource": {
              "Description": "Bastion instance security group  ",
              "GroupName": "BastionSG",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "183.82.0.0/32"
                    },
                    {
                      "CidrIp": "10.0.0.0/16"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "BastionSG"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "BastionSG | sg-1234567abc"
            },
            "severity": 3,
            "message": "Security group is restricted to few IP ranges"
          },
          {
            "resource": {
              "Description": "launch-wizard-1 created 2018-06-08T13:07:11.064+05:30",
              "GroupName": "launch-wizard-1",
              "IpPermissions": [
                {
                  "FromPort": 3389,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": 3389,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "launch-wizard-1 | sg-1234567abc"
            },
            "severity": 0,
            "message": "Security group is open to entire world",
            "action": "Remove rule containing IP range: 0.0.0.0/0."
          },
          {
            "resource": {
              "Description": "For RDS",
              "GroupName": "RDS",
              "IpPermissions": [
                {
                  "FromPort": 3306,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "10.0.0.0/16"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 3306,
                  "UserIdGroupPairs": [
                    {
                      "GroupId": "sg-1234567abc",
                      "UserId": "123456789012"
                    }
                  ]
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "RDS SG"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "RDS | sg-1234567abc"
            },
            "severity": 3,
            "message": "Security group is restricted to few IP ranges"
          }
        ],
        "ap-southeast-2": [],
        "ap-northeast-1": [],
        "eu-central-1": [],
        "eu-west-1": [
          {
            "resource": {
              "Description": "launch-wizard-1 created 2018-02-27T13:33:35.683+05:30",
              "GroupName": "launch-wizard-1",
              "IpPermissions": [
                {
                  "FromPort": 0,
                  "IpProtocol": "icmp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": -1,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 8,
                  "IpProtocol": "icmp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": -1,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "launch-wizard-1 | sg-1234567abc"
            },
            "severity": 0,
            "message": "Security group is open to entire world",
            "action": "Remove rule containing IP range: 0.0.0.0/0."
          },
          {
            "resource": {
              "Description": "launch-wizard-2 created 2018-05-16T16:50:09.787+05:30",
              "GroupName": "WinServer",
              "IpPermissions": [
                {
                  "FromPort": 0,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "172.31.16.0/20"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 65535,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 0,
                  "IpProtocol": "udp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": 65535,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 3389,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 3389,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": -1,
                  "IpProtocol": "icmp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": -1,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "WinServer | sg-1234567abc"
            },
            "severity": 0,
            "message": "Security group is open to entire world",
            "action": "Remove rule containing IP range: 0.0.0.0/0."
          }
        ],
        "eu-west-2": [],
        "sa-east-1": []
      }
    },
    "security_groups_wide_port_range": {
      "what": "Are there any security groups with wide range of ports?",
      "why": "Security group should not expose wide range of port as it will be valnerable for port scan attacks",
      "somedomain.commendation": "somedomain.commended to expose only port used by application",
      "regions": {
        "us-east-2": [
          {
            "resource": {
              "Description": "launch-wizard-2 created 2018-01-02T17:49:00.484+05:30",
              "GroupName": "launch-wizard-2",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "launch-wizard-2 | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          },
          {
            "resource": {
              "Description": "launch-wizard-1 created 2017-12-19T14:46:01.847+05:30",
              "GroupName": "demo-sg",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "202.83.0.0/32",
                      "Description": ""
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "demo-sg | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          },
          {
            "resource": {
              "Description": "launch-wizard-1 created 2018-01-02T15:39:16.158+05:30",
              "GroupName": "launch-wizard-1",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "launch-wizard-1 | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          }
        ],
        "us-east-1": [
          {
            "resource": {
              "Description": "launch-wizard-2 created 2018-01-02T15:27:32.619+05:30",
              "GroupName": "launch-wizard-2",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "launch-wizard-2 | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          },
          {
            "resource": {
              "Description": "sg-1234567abc-traffice",
              "GroupName": "sg_all",
              "IpPermissions": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "sg_all | sg-1234567abc"
            },
            "severity": 0,
            "message": "Exposes wide port range",
            "action": "Remove rule containing IP protocol: -1"
          },
          {
            "resource": {
              "Description": "csr security group",
              "GroupName": "sg_csr",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": -1,
                  "IpProtocol": "icmp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": -1,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "sg_csr | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          },
          {
            "resource": {
              "Description": "launch-wizard-4 created 2018-02-27T12:55:40.527+05:30",
              "GroupName": "somesg",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": -1,
                  "IpProtocol": "icmp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": -1,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "somesg | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          },
          {
            "resource": {
              "Description": "launch-wizard-3 created 2018-02-23T16:58:44.420+05:30",
              "GroupName": "launch-wizard-3",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "launch-wizard-3 | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          }
        ],
        "us-west-1": [],
        "us-west-2": [],
        "ca-central-1": [],
        "ap-south-1": [
          {
            "resource": {
              "Description": "launch-wizard-1 created 2018-07-02T12:41:30.777+05:30",
              "GroupName": "WinServer",
              "IpPermissions": [
                {
                  "FromPort": 3389,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 3389,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "WinServer | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          },
          {
            "resource": {
              "Description": "outside interfacing subnets",
              "GroupName": "SEC_outside 1a",
              "IpPermissions": [
                {
                  "FromPort": 80,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": 80,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 443,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": 443,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "SEC_outside_1a"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "SEC_outside 1a | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          },
          {
            "resource": {
              "Description": "Application subnets 1a",
              "GroupName": "Application 1a",
              "IpPermissions": [
                {
                  "FromPort": 80,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.1.5/32"
                    },
                    {
                      "CidrIp": "10.30.3.0/24"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 80,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.1.5/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 3389,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.1.5/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 3389,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 443,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.1.5/32"
                    },
                    {
                      "CidrIp": "10.30.3.0/24"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 443,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "SEC_Application_1a"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "Application 1a | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          },
          {
            "resource": {
              "Description": "sg_shared created 2018-06-29T17:02:45.431+05:30",
              "GroupName": "sg_shared",
              "IpPermissions": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "Shared_SG"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "sg_shared | sg-1234567abc"
            },
            "severity": 0,
            "message": "Exposes wide port range",
            "action": "Remove rule containing IP protocol: -1"
          },
          {
            "resource": {
              "Description": "SomeApp subnets for 1a",
              "GroupName": "SomeApp 1a",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "14.142.0.0/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 4444,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "14.142.0.0/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 4444,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 2214,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "14.142.0.0/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 2214,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 2222,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "14.142.0.0/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 2222,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 2242,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "14.142.0.0/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 2242,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 3389,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "14.142.0.0/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 3389,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "SEC_SomeApp"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "SomeApp 1a | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          },
          {
            "resource": {
              "Description": "Inside subnet containing internal interfaces for outside subnets",
              "GroupName": "SEC_Inside1a",
              "IpPermissions": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.1.0/24",
                      "Description": ""
                    },
                    {
                      "CidrIp": "10.30.2.0/24",
                      "Description": ""
                    },
                    {
                      "CidrIp": "10.30.3.0/24",
                      "Description": ""
                    },
                    {
                      "CidrIp": "10.30.4.0/24",
                      "Description": ""
                    },
                    {
                      "CidrIp": "10.30.5.0/24",
                      "Description": ""
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "SEC_Inside_1a"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "SEC_Inside1a | sg-1234567abc"
            },
            "severity": 0,
            "message": "Exposes wide port range",
            "action": "Remove rule containing IP protocol: -1"
          },
          {
            "resource": {
              "Description": "DB subnets 1a",
              "GroupName": "Database 1a",
              "IpPermissions": [
                {
                  "FromPort": 1521,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.3.0/24"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 1521,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.1.5/32"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "SEC_DB_1a"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "Database 1a | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          },
          {
            "resource": {
              "Description": "Core services subnets 1a",
              "GroupName": "Core Services 1a",
              "IpPermissions": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.1.0/24"
                    },
                    {
                      "CidrIp": "10.30.2.0/24"
                    },
                    {
                      "CidrIp": "10.30.3.0/24"
                    },
                    {
                      "CidrIp": "10.30.4.0/24"
                    },
                    {
                      "CidrIp": "10.30.5.0/24"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "SEC_Coreservices_1a"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "Core Services 1a | sg-1234567abc"
            },
            "severity": 0,
            "message": "Exposes wide port range",
            "action": "Remove rule containing IP protocol: -1"
          },
          {
            "resource": {
              "Description": "WAN interfacing subnets 1a",
              "GroupName": "WAN 1a",
              "IpPermissions": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "10.30.1.0/24"
                    },
                    {
                      "CidrIp": "10.30.2.0/24"
                    },
                    {
                      "CidrIp": "10.30.3.0/24"
                    },
                    {
                      "CidrIp": "10.30.4.0/24"
                    },
                    {
                      "CidrIp": "10.30.5.0/24"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "SEC_WAN_1a"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "WAN 1a | sg-1234567abc"
            },
            "severity": 0,
            "message": "Exposes wide port range",
            "action": "Remove rule containing IP protocol: -1"
          }
        ],
        "ap-northeast-2": [],
        "ap-southeast-1": [
          {
            "resource": {
              "Description": "launch-wizard-1 created 2018-06-07T19:22:59.014+05:30",
              "GroupName": "replication-bastion",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "bastion"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "replication-bastion | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          },
          {
            "resource": {
              "Description": "Created from the RDS Management Console: 2018/06/07 12:21:14",
              "GroupName": "rds-launch-wizard",
              "IpPermissions": [
                {
                  "FromPort": 3306,
                  "IpProtocol": "tcp",
                  "IpRanges": [],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 3306,
                  "UserIdGroupPairs": [
                    {
                      "GroupId": "sg-1234567abc",
                      "UserId": "123456789012"
                    }
                  ]
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "rds"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "rds-launch-wizard | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          },
          {
            "resource": {
              "Description": "For DMS",
              "GroupName": "DMS",
              "IpPermissions": [],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "DMS SG"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "DMS | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          },
          {
            "resource": {
              "Description": "Bastion instance security group  ",
              "GroupName": "BastionSG",
              "IpPermissions": [
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "183.82.0.0/32"
                    },
                    {
                      "CidrIp": "10.0.0.0/16"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "BastionSG"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "BastionSG | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          },
          {
            "resource": {
              "Description": "launch-wizard-1 created 2018-06-08T13:07:11.064+05:30",
              "GroupName": "launch-wizard-1",
              "IpPermissions": [
                {
                  "FromPort": 3389,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": 3389,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "launch-wizard-1 | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          },
          {
            "resource": {
              "Description": "For RDS",
              "GroupName": "RDS",
              "IpPermissions": [
                {
                  "FromPort": 3306,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "10.0.0.0/16"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 3306,
                  "UserIdGroupPairs": [
                    {
                      "GroupId": "sg-1234567abc",
                      "UserId": "123456789012"
                    }
                  ]
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "RDS SG"
                }
              ],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "RDS | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          }
        ],
        "ap-southeast-2": [],
        "ap-northeast-1": [],
        "eu-central-1": [],
        "eu-west-1": [
          {
            "resource": {
              "Description": "launch-wizard-1 created 2018-02-27T13:33:35.683+05:30",
              "GroupName": "launch-wizard-1",
              "IpPermissions": [
                {
                  "FromPort": 0,
                  "IpProtocol": "icmp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": -1,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 22,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 22,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 8,
                  "IpProtocol": "icmp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": -1,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "launch-wizard-1 | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          },
          {
            "resource": {
              "Description": "launch-wizard-2 created 2018-05-16T16:50:09.787+05:30",
              "GroupName": "WinServer",
              "IpPermissions": [
                {
                  "FromPort": 0,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "172.31.16.0/20"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 65535,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 0,
                  "IpProtocol": "udp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": 65535,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": 3389,
                  "IpProtocol": "tcp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "ToPort": 3389,
                  "UserIdGroupPairs": []
                },
                {
                  "FromPort": -1,
                  "IpProtocol": "icmp",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [
                    {
                      "CidrIpv6": "::/0"
                    }
                  ],
                  "PrefixListIds": [],
                  "ToPort": -1,
                  "UserIdGroupPairs": []
                }
              ],
              "OwnerId": "123456789012",
              "GroupId": "sg-1234567abc",
              "IpPermissionsEgress": [
                {
                  "IpProtocol": "-1",
                  "IpRanges": [
                    {
                      "CidrIp": "0.0.0.0/0"
                    }
                  ],
                  "Ipv6Ranges": [],
                  "PrefixListIds": [],
                  "UserIdGroupPairs": []
                }
              ],
              "Tags": [],
              "VpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "SecurityGroup",
              "value": "WinServer | sg-1234567abc"
            },
            "severity": 3,
            "message": "Exposes only specific ports"
          }
        ],
        "eu-west-2": [],
        "sa-east-1": []
      }
    }
  },
  "aws.elb": {
    "access_logs_enabled_v1": {
      "what": "Are access logs enabled for Load balancers?",
      "why": "Access logs helps us to understand request patterns also helps to detect threats",
      "somedomain.commendation": "somedomain.commended to enable access logs for all public facing load balancers",
      "regions": {
        "us-east-2": [],
        "us-east-1": [],
        "us-west-1": [],
        "us-west-2": [],
        "ca-central-1": [],
        "ap-south-1": [],
        "ap-northeast-2": [],
        "ap-southeast-1": [],
        "ap-southeast-2": [],
        "ap-northeast-1": [],
        "eu-central-1": [],
        "eu-west-1": [],
        "eu-west-2": [],
        "sa-east-1": []
      }
    },
    "secure_listeners_v1": {
      "what": "Are there any Load balancers without secure(SSL/TSL) listeners?",
      "why": "Transmission of sensitive data to/from Load balancer should happen via secure listener",
      "somedomain.commendation": "somedomain.commended to have secure listener and use them to transmit sensitive data",
      "regions": {
        "us-east-2": [],
        "us-east-1": [],
        "us-west-1": [],
        "us-west-2": [],
        "ca-central-1": [],
        "ap-south-1": [],
        "ap-northeast-2": [],
        "ap-southeast-1": [],
        "ap-southeast-2": [],
        "ap-northeast-1": [],
        "eu-central-1": [],
        "eu-west-1": [],
        "eu-west-2": [],
        "sa-east-1": []
      }
    }
  },
  "aws.iam": {
    "admin_count": {
      "what": "Are there too many admins for the account?",
      "why": "It is hard to manage security goals when there too many admins as chances of mistakes increases",
      "somedomain.commendation": "somedomain.commended to have 2-3 admins per account",
      "regions": {
        "global": [
          {
            "resource": {
              "adminUsers": [
                "user",
                "user"
              ]
            },
            "resourceSummary": {
              "name": "AdminUsers",
              "value": "user, user"
            },
            "title": "Number of admins in the account",
            "severity": 3,
            "message": "Account has 2 admins"
          }
        ]
      }
    },
    "password_policy": {
      "what": "Is account password policy following best practices?",
      "why": "It is important to have secure password policy as leaked or weak passwords can give direct access to attackers",
      "somedomain.commendation": "somedomain.commended to have secure password policy",
      "regions": {
        "global": [
          {
            "resourceSummary": {
              "value": "Minimum Password Length",
              "name": "Option"
            },
            "severity": 3,
            "message": "This has a somedomain.commended value"
          },
          {
            "resourceSummary": {
              "value": "Require Symbols",
              "name": "Option"
            },
            "severity": 3,
            "message": "Already Enabled"
          },
          {
            "resourceSummary": {
              "name": "Option",
              "value": "Require Numbers"
            },
            "severity": 3,
            "message": "Already Enabled"
          },
          {
            "resourceSummary": {
              "value": "Require Uppercase Characters",
              "name": "Option"
            },
            "severity": 3,
            "message": "Already Enabled"
          },
          {
            "resourceSummary": {
              "value": "Require Lowercase Characters",
              "name": "Option"
            },
            "severity": 3,
            "message": "Already Enabled"
          },
          {
            "resourceSummary": {
              "value": "Expire Passwords",
              "name": "Option"
            },
            "severity": 3,
            "message": "Already Enabled"
          },
          {
            "resourceSummary": {
              "value": "Max Password Age",
              "name": "Option"
            },
            "severity": 3,
            "message": "This has a somedomain.commended value"
          },
          {
            "resourceSummary": {
              "value": "Password Reuse Prevention",
              "name": "Option"
            },
            "severity": 0,
            "message": "New password shouldn't be same as at least last 3 used passwords",
            "action": "Set this to 3"
          },
          {
            "resourceSummary": {
              "value": "Hard Expiry",
              "name": "Option"
            },
            "severity": 1,
            "message": "User should contact the admin to reset the expired password",
            "action": "Set this to true. Use caution here if there is only admin for your account then don't set this"
          }
        ]
      }
    },
    "root_user_access_keys_active": {
      "what": "Are there any root user access keys active?",
      "why": "Root user access keys are unrestrictable hence shouldn't be used as damage will be determental if they gets leaked",
      "somedomain.commendation": "somedomain.commended to delete and never user root user access keys",
      "regions": {
        "global": [
          {
            "resource": {
              "user": "<root_account>",
              "arn": "arn:aws:iam::123456789012:root",
              "user_creation_time": "2017-11-16T07:45:57+00:00",
              "password_enabled": "not_supported",
              "password_last_used": "2018-06-25T05:08:33+00:00",
              "password_last_changed": "not_supported",
              "password_next_rotation": "not_supported",
              "mfa_active": "true",
              "access_key_1_active": "false",
              "access_key_1_last_rotated": "N/A",
              "access_key_1_last_used_date": "N/A",
              "access_key_1_last_used_region": "N/A",
              "access_key_1_last_used_service": "N/A",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "<root_account>"
            },
            "severity": 3,
            "message": "Root user access keys are not active"
          }
        ]
      }
    },
    "cross_accounts_without_external_id": {
      "what": "Are there accounts without ExternalId?",
      "why": "It is important to associate ExternalId for cross account role access",
      "somedomain.commendation": "somedomain.commended to use ExternalId for third party accounts",
      "regions": {
        "global": [
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "somedomain.commandRoleForManagedInstances"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "apexDemoProject_lambda_function"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "AppDiscovery"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "aws-ec2-spot-fleet-tagging-role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "aws-elasticbeanstalk-ec2-role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "aws-elasticbeanstalk-service-role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "AWSServiceRoleForAmazonElasticsearchService"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "AWSServiceRoleForAmazonGuardDuty"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "AWSServiceRoleForAutoScaling"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "AWSServiceRoleForEC2Spot"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "AWSServiceRoleForEC2SpotFleet"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "AWSServiceRoleForECS"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "AWSServiceRoleForElastiCache"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "AWSServiceRoleForElasticLoadBalancing"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "AWSServiceRoleForOrganizations"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "AWSServiceRoleForRDS"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "AWS_Events_Invoke_Step_Functions_805721827"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "aws_ssm"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "Cisco_CSR_EEM"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "CloudwatchLogAgent"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "cloudwatchlogpush"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "cloud_report"
            },
            "severity": 3,
            "message": "Account 147967597763 has ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "CognitoAccessForAmazonES"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "Cognito_useridentitypoolAuth_Role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "Cognito_useridentitypoolUnauth_Role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "Cognito_dev_tensult_customersAuth_Role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "Cognito_dev_tensult_customersUnauth_Role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "Cognito_myIdPool1Unauth_Role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "Cognito_myIdPool1Unauth_Role1"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "Cognito_usertestAuth_Role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "Cognito_usertestUnauth_Role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "Cognito_testpoolAuth_Role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "Cognito_testpoolUnauth_Role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "Cognito_test_customersAuth_Role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "Cognito_test_customersAuth_Role2"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "Cognito_test_customersUnauth_Role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "config-role-ap-south-1"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "userCloudWatchMetric"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "dms-access-for-tasks"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "dms-cloudwatch-logs-role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "dms-vpc-1234567abc"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "dynamoDbReadAccess"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "ec2-read-role"
            },
            "severity": 3,
            "message": "Account 173268405833 has ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "EC2FullAccess"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "EC2SSMRole"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "EC2_Full"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "ecsInstanceRole"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "flowlogsRole"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "user-test-delete"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "ImageResizerLambda"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "KibanaUserGroup-SMS-Role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "lambda_basic_execution"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "user-windows-ssm"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "migrationhub-discovery"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "migrationhub-dms"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "migrationhub-sms"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "nessus-role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "rds-monitoring-role"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "S3ReadAccess"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "SampleForLeanring"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          },
          {
            "resourceSummary": {
              "name": "Roles",
              "value": "stepFunctionsLamdaRole"
            },
            "severity": 0,
            "action": "Add an ExternalId",
            "message": "Account undefined does not have ExternalId"
          }
        ]
      }
    },
    "users_access_keys_unused": {
      "what": "Are there any user access keys unused?",
      "why": "It is important to delete unused or unneeded access keys as it reduces risk of misusing them",
      "somedomain.commendation": "somedomain.commended to delete unused user access keys regularly",
      "regions": {
        "global": [
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2017-11-16T08:08:38+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-04-30T09:50:15+00:00",
              "password_last_changed": "2018-02-14T11:00:42+00:00",
              "password_next_rotation": "2018-08-13T11:00:42+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2017-11-16T08:08:39+00:00",
              "access_key_1_last_used_date": "2018-04-30T10:01:00+00:00",
              "access_key_1_last_used_region": "ap-south-1",
              "access_key_1_last_used_service": "ec2",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 0,
            "message": "User access key 1 is unused",
            "action": "Delete unused user access key 1"
          },
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2018-04-18T08:35:38+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-06-09T10:02:11+00:00",
              "password_last_changed": "2018-04-18T08:35:40+00:00",
              "password_next_rotation": "2018-10-15T08:35:40+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2018-04-18T08:35:40+00:00",
              "access_key_1_last_used_date": "2018-04-25T08:27:00+00:00",
              "access_key_1_last_used_region": "ap-south-1",
              "access_key_1_last_used_service": "s3",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 0,
            "message": "User access key 1 is unused",
            "action": "Delete unused user access key 1"
          },
          {
            "resource": {
              "user": "usera",
              "arn": "arn:aws:iam::123456789012:user/usera",
              "user_creation_time": "2018-01-11T06:18:18+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-05-28T08:33:15+00:00",
              "password_last_changed": "2018-04-12T12:38:11+00:00",
              "password_next_rotation": "2018-10-09T12:38:11+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2018-01-11T12:33:49+00:00",
              "access_key_1_last_used_date": "2018-01-11T12:37:00+00:00",
              "access_key_1_last_used_region": "ap-south-1",
              "access_key_1_last_used_service": "s3",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "usera"
            },
            "severity": 0,
            "message": "User access key 1 is unused",
            "action": "Delete unused user access key 1"
          },
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2017-11-16T08:04:44+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-04-13T04:50:52+00:00",
              "password_last_changed": "2018-05-18T06:40:00+00:00",
              "password_next_rotation": "2018-11-14T06:40:00+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2018-01-04T09:19:26+00:00",
              "access_key_1_last_used_date": "2018-06-26T02:33:00+00:00",
              "access_key_1_last_used_region": "ap-south-1",
              "access_key_1_last_used_service": "ec2",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 3,
            "message": "User access key 1 is actively used"
          },
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2017-11-21T11:41:22+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-07-02T05:20:14+00:00",
              "password_last_changed": "2018-02-05T06:04:08+00:00",
              "password_next_rotation": "2018-08-04T06:04:08+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2018-06-29T10:17:04+00:00",
              "access_key_1_last_used_date": "2018-06-30T09:25:00+00:00",
              "access_key_1_last_used_region": "us-east-2",
              "access_key_1_last_used_service": "ec2",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 3,
            "message": "User access key 1 is actively used"
          },
          {
            "resource": {
              "user": "user-dev",
              "arn": "arn:aws:iam::123456789012:user/user-dev",
              "user_creation_time": "2018-06-08T10:08:41+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-07-02T05:35:42+00:00",
              "password_last_changed": "2018-06-08T10:11:18+00:00",
              "password_next_rotation": "2018-12-05T10:11:18+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2018-06-13T10:29:15+00:00",
              "access_key_1_last_used_date": "2018-07-02T13:27:00+00:00",
              "access_key_1_last_used_region": "us-west-1",
              "access_key_1_last_used_service": "dms",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user-dev"
            },
            "severity": 3,
            "message": "User access key 1 is actively used"
          },
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2017-12-16T05:55:44+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-07-01T19:08:28+00:00",
              "password_last_changed": "2018-03-19T07:01:44+00:00",
              "password_next_rotation": "2018-09-15T07:01:44+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2017-12-16T05:55:45+00:00",
              "access_key_1_last_used_date": "2018-06-26T20:31:00+00:00",
              "access_key_1_last_used_region": "ap-south-1",
              "access_key_1_last_used_service": "lambda",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 3,
            "message": "User access key 1 is actively used"
          }
        ]
      }
    },
    "users_access_keys_old": {
      "what": "Are user access keys are too old?",
      "why": "It is important to rotate access keys regularly as it will reduce improper use",
      "somedomain.commendation": "somedomain.commended to rotate user access keys regularly",
      "regions": {
        "global": [
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2017-11-16T08:08:38+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-04-30T09:50:15+00:00",
              "password_last_changed": "2018-02-14T11:00:42+00:00",
              "password_next_rotation": "2018-08-13T11:00:42+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2017-11-16T08:08:39+00:00",
              "access_key_1_last_used_date": "2018-04-30T10:01:00+00:00",
              "access_key_1_last_used_region": "ap-south-1",
              "access_key_1_last_used_service": "ec2",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 0,
            "message": "User access key 1 is not rotated from last 180 days",
            "action": "Rotate user access key 1"
          },
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2018-04-18T08:35:38+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-06-09T10:02:11+00:00",
              "password_last_changed": "2018-04-18T08:35:40+00:00",
              "password_next_rotation": "2018-10-15T08:35:40+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2018-04-18T08:35:40+00:00",
              "access_key_1_last_used_date": "2018-04-25T08:27:00+00:00",
              "access_key_1_last_used_region": "ap-south-1",
              "access_key_1_last_used_service": "s3",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 3,
            "message": "User access key 1 is rotated within last 180 days"
          },
          {
            "resource": {
              "user": "usera",
              "arn": "arn:aws:iam::123456789012:user/usera",
              "user_creation_time": "2018-01-11T06:18:18+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-05-28T08:33:15+00:00",
              "password_last_changed": "2018-04-12T12:38:11+00:00",
              "password_next_rotation": "2018-10-09T12:38:11+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2018-01-11T12:33:49+00:00",
              "access_key_1_last_used_date": "2018-01-11T12:37:00+00:00",
              "access_key_1_last_used_region": "ap-south-1",
              "access_key_1_last_used_service": "s3",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "usera"
            },
            "severity": 3,
            "message": "User access key 1 is rotated within last 180 days"
          },
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2017-11-16T08:04:44+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-04-13T04:50:52+00:00",
              "password_last_changed": "2018-05-18T06:40:00+00:00",
              "password_next_rotation": "2018-11-14T06:40:00+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2018-01-04T09:19:26+00:00",
              "access_key_1_last_used_date": "2018-06-26T02:33:00+00:00",
              "access_key_1_last_used_region": "ap-south-1",
              "access_key_1_last_used_service": "ec2",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 3,
            "message": "User access key 1 is rotated within last 180 days"
          },
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2017-11-21T11:41:22+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-07-02T05:20:14+00:00",
              "password_last_changed": "2018-02-05T06:04:08+00:00",
              "password_next_rotation": "2018-08-04T06:04:08+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2018-06-29T10:17:04+00:00",
              "access_key_1_last_used_date": "2018-06-30T09:25:00+00:00",
              "access_key_1_last_used_region": "us-east-2",
              "access_key_1_last_used_service": "ec2",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 3,
            "message": "User access key 1 is rotated within last 180 days"
          },
          {
            "resource": {
              "user": "user-dev",
              "arn": "arn:aws:iam::123456789012:user/user-dev",
              "user_creation_time": "2018-06-08T10:08:41+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-07-02T05:35:42+00:00",
              "password_last_changed": "2018-06-08T10:11:18+00:00",
              "password_next_rotation": "2018-12-05T10:11:18+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2018-06-13T10:29:15+00:00",
              "access_key_1_last_used_date": "2018-07-02T13:27:00+00:00",
              "access_key_1_last_used_region": "us-west-1",
              "access_key_1_last_used_service": "dms",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user-dev"
            },
            "severity": 3,
            "message": "User access key 1 is rotated within last 180 days"
          },
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2017-12-16T05:55:44+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-07-01T19:08:28+00:00",
              "password_last_changed": "2018-03-19T07:01:44+00:00",
              "password_next_rotation": "2018-09-15T07:01:44+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2017-12-16T05:55:45+00:00",
              "access_key_1_last_used_date": "2018-06-26T20:31:00+00:00",
              "access_key_1_last_used_region": "ap-south-1",
              "access_key_1_last_used_service": "lambda",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 0,
            "message": "User access key 1 is not rotated from last 180 days",
            "action": "Rotate user access key 1"
          }
        ]
      }
    },
    "user_accounts_mfa_enabled": {
      "what": "Are there any user access keys unused?",
      "why": "It is important to delete unused or unneeded access keys as it reduces risk of misusing them",
      "somedomain.commendation": "somedomain.commended to delete unused user access keys regularly",
      "regions": {
        "global": [
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2017-11-16T08:08:38+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-04-30T09:50:15+00:00",
              "password_last_changed": "2018-02-14T11:00:42+00:00",
              "password_next_rotation": "2018-08-13T11:00:42+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2017-11-16T08:08:39+00:00",
              "access_key_1_last_used_date": "2018-04-30T10:01:00+00:00",
              "access_key_1_last_used_region": "ap-south-1",
              "access_key_1_last_used_service": "ec2",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 3,
            "message": "User account is MFA enabled"
          },
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2017-11-16T08:04:44+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-04-30T11:15:25+00:00",
              "password_last_changed": "2018-04-27T09:23:49+00:00",
              "password_next_rotation": "2018-10-24T09:23:49+00:00",
              "mfa_active": "true",
              "access_key_1_active": "false",
              "access_key_1_last_rotated": "2017-11-16T08:04:45+00:00",
              "access_key_1_last_used_date": "N/A",
              "access_key_1_last_used_region": "N/A",
              "access_key_1_last_used_service": "N/A",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 3,
            "message": "User account is MFA enabled"
          },
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2018-04-18T08:35:38+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-06-09T10:02:11+00:00",
              "password_last_changed": "2018-04-18T08:35:40+00:00",
              "password_next_rotation": "2018-10-15T08:35:40+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2018-04-18T08:35:40+00:00",
              "access_key_1_last_used_date": "2018-04-25T08:27:00+00:00",
              "access_key_1_last_used_region": "ap-south-1",
              "access_key_1_last_used_service": "s3",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 3,
            "message": "User account is MFA enabled"
          },
          {
            "resource": {
              "user": "usera",
              "arn": "arn:aws:iam::123456789012:user/usera",
              "user_creation_time": "2018-01-11T06:18:18+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-05-28T08:33:15+00:00",
              "password_last_changed": "2018-04-12T12:38:11+00:00",
              "password_next_rotation": "2018-10-09T12:38:11+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2018-01-11T12:33:49+00:00",
              "access_key_1_last_used_date": "2018-01-11T12:37:00+00:00",
              "access_key_1_last_used_region": "ap-south-1",
              "access_key_1_last_used_service": "s3",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "usera"
            },
            "severity": 3,
            "message": "User account is MFA enabled"
          },
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2017-11-16T08:04:44+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-04-13T04:50:52+00:00",
              "password_last_changed": "2018-05-18T06:40:00+00:00",
              "password_next_rotation": "2018-11-14T06:40:00+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2018-01-04T09:19:26+00:00",
              "access_key_1_last_used_date": "2018-06-26T02:33:00+00:00",
              "access_key_1_last_used_region": "ap-south-1",
              "access_key_1_last_used_service": "ec2",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 3,
            "message": "User account is MFA enabled"
          },
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2017-11-21T11:40:33+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-07-02T09:44:39+00:00",
              "password_last_changed": "2018-02-20T04:31:16+00:00",
              "password_next_rotation": "2018-08-19T04:31:16+00:00",
              "mfa_active": "true",
              "access_key_1_active": "false",
              "access_key_1_last_rotated": "N/A",
              "access_key_1_last_used_date": "N/A",
              "access_key_1_last_used_region": "N/A",
              "access_key_1_last_used_service": "N/A",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 3,
            "message": "User account is MFA enabled"
          },
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2017-11-21T11:41:22+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-07-02T05:20:14+00:00",
              "password_last_changed": "2018-02-05T06:04:08+00:00",
              "password_next_rotation": "2018-08-04T06:04:08+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2018-06-29T10:17:04+00:00",
              "access_key_1_last_used_date": "2018-06-30T09:25:00+00:00",
              "access_key_1_last_used_region": "us-east-2",
              "access_key_1_last_used_service": "ec2",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 3,
            "message": "User account is MFA enabled"
          },
          {
            "resource": {
              "user": "user-dev",
              "arn": "arn:aws:iam::123456789012:user/user-dev",
              "user_creation_time": "2018-06-08T10:08:41+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-07-02T05:35:42+00:00",
              "password_last_changed": "2018-06-08T10:11:18+00:00",
              "password_next_rotation": "2018-12-05T10:11:18+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2018-06-13T10:29:15+00:00",
              "access_key_1_last_used_date": "2018-07-02T13:27:00+00:00",
              "access_key_1_last_used_region": "us-west-1",
              "access_key_1_last_used_service": "dms",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user-dev"
            },
            "severity": 3,
            "message": "User account is MFA enabled"
          },
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2017-12-16T05:55:44+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-07-01T19:08:28+00:00",
              "password_last_changed": "2018-03-19T07:01:44+00:00",
              "password_next_rotation": "2018-09-15T07:01:44+00:00",
              "mfa_active": "true",
              "access_key_1_active": "true",
              "access_key_1_last_rotated": "2017-12-16T05:55:45+00:00",
              "access_key_1_last_used_date": "2018-06-26T20:31:00+00:00",
              "access_key_1_last_used_region": "ap-south-1",
              "access_key_1_last_used_service": "lambda",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 3,
            "message": "User account is MFA enabled"
          },
          {
            "resource": {
              "user": "user",
              "arn": "arn:aws:iam::123456789012:user/user",
              "user_creation_time": "2018-01-12T08:26:56+00:00",
              "password_enabled": "true",
              "password_last_used": "2018-06-08T07:33:47+00:00",
              "password_last_changed": "2018-04-19T06:22:33+00:00",
              "password_next_rotation": "2018-10-16T06:22:33+00:00",
              "mfa_active": "true",
              "access_key_1_active": "false",
              "access_key_1_last_rotated": "N/A",
              "access_key_1_last_used_date": "N/A",
              "access_key_1_last_used_region": "N/A",
              "access_key_1_last_used_service": "N/A",
              "access_key_2_active": "false",
              "access_key_2_last_rotated": "N/A",
              "access_key_2_last_used_date": "N/A",
              "access_key_2_last_used_region": "N/A",
              "access_key_2_last_used_service": "N/A",
              "cert_1_active": "false",
              "cert_1_last_rotated": "N/A",
              "cert_2_active": "false",
              "cert_2_last_rotated": "N/A"
            },
            "resourceSummary": {
              "name": "User",
              "value": "user"
            },
            "severity": 3,
            "message": "User account is MFA enabled"
          }
        ]
      }
    }
  },
  "aws.rds": {
    "default_security_groups_used": {
      "what": "Are there any default security groups used for RDS instances?",
      "why": "Default security groups are open to world by default and requires extra setup make them secure",
      "somedomain.commendation": "somedomain.commended not to use default security groups instead create a custom one as they make you better understand the security posture",
      "regions": {
        "us-east-2": [],
        "us-east-1": [],
        "us-west-1": [
          {
            "resource": {
              "instanceName": "someapp-123456abc",
              "security_groups": [
                {
                  "VpcSecurityGroupId": "sg-1234567abc",
                  "Status": "active"
                }
              ]
            },
            "resourceSummary": {
              "name": "Instance",
              "value": "someapp-123456abc"
            },
            "severity": 0,
            "message": "Default security groups are used",
            "action": "Use custom security group instead default security group"
          }
        ],
        "us-west-2": [],
        "ca-central-1": [],
        "ap-south-1": [],
        "ap-northeast-2": [],
        "ap-southeast-1": [],
        "ap-southeast-2": [],
        "ap-northeast-1": [],
        "eu-central-1": [],
        "eu-west-1": [],
        "eu-west-2": [],
        "sa-east-1": []
      }
    },
    "default_vpcs_used": {
      "what": "Are there any default vpc used for RDS instances?",
      "why": "Default vpcs are open to world by default and requires extra setup make them secure",
      "somedomain.commendation": "somedomain.commended not to use default vpc instead create a custom one as they make you better understand the security posture",
      "regions": {
        "us-east-2": [],
        "us-east-1": [],
        "us-west-1": [
          {
            "resource": {
              "instanceName": "someapp-123456abc",
              "vpcId": "vpc-1234567abc"
            },
            "resourceSummary": {
              "name": "Instance",
              "value": "someapp-123456abc"
            },
            "severity": 3,
            "message": "Default VPC is not used"
          }
        ],
        "us-west-2": [],
        "ca-central-1": [],
        "ap-south-1": [],
        "ap-northeast-2": [],
        "ap-southeast-1": [],
        "ap-southeast-2": [],
        "ap-northeast-1": [],
        "eu-central-1": [],
        "eu-west-1": [],
        "eu-west-2": [],
        "sa-east-1": []
      }
    },
    "encryption_enabled": {
      "what": "Is encryption enabled for RDS instances?",
      "why": "It is important to encrypt data at rest",
      "somedomain.commendation": "somedomain.commended to enable encryption for instance storage",
      "regions": {
        "us-east-2": [],
        "us-east-1": [],
        "us-west-1": [
          {
            "resource": {
              "DBInstanceIdentifier": "someapp-123456abc",
              "DBInstanceClass": "db.t2.micro",
              "Engine": "mysql",
              "DBInstanceStatus": "available",
              "MasterUsername": "mysql_someapp",
              "DBName": "mysqldb",
              "Endpoint": {
                "Address": "someapp-123456abc.1234567abc.us-west-1.rds.somedomain.com",
                "Port": 3306,
                "HostedZoneId": "1234567ANC"
              },
              "AllocatedStorage": 10,
              "InstanceCreateTime": "2018-07-02T09:18:24.661Z",
              "PreferredBackupWindow": "12:13-12:43",
              "BackupRetentionPeriod": 0,
              "DBSecurityGroups": [],
              "VpcSecurityGroups": [
                {
                  "VpcSecurityGroupId": "sg-1234567abc",
                  "Status": "active"
                }
              ],
              "DBParameterGroups": [
                {
                  "DBParameterGroupName": "default.mysql5.6",
                  "ParameterApplyStatus": "in-sync"
                }
              ],
              "AvailabilityZone": "us-west-1c",
              "DBSubnetGroup": {
                "DBSubnetGroupName": "rds_group",
                "DBSubnetGroupDescription": "Managed by someapp",
                "VpcId": "vpc-1234567abc",
                "SubnetGroupStatus": "Complete",
                "Subnets": [
                  {
                    "SubnetIdentifier": "subnet-abc123",
                    "SubnetAvailabilityZone": {
                      "Name": "us-west-1a"
                    },
                    "SubnetStatus": "Active"
                  },
                  {
                    "SubnetIdentifier": "subnet-abc123",
                    "SubnetAvailabilityZone": {
                      "Name": "us-west-1c"
                    },
                    "SubnetStatus": "Active"
                  }
                ]
              },
              "PreferredMaintenanceWindow": "wed:06:11-wed:06:41",
              "PendingModifiedValues": {},
              "MultiAZ": false,
              "EngineVersion": "5.6.39",
              "AutoMinorVersionUpgrade": true,
              "ReadReplicaDBInstanceIdentifiers": [],
              "ReadReplicaDBClusterIdentifiers": [],
              "LicenseModel": "general-public-license",
              "OptionGroupMemberships": [
                {
                  "OptionGroupName": "default:mysql-5-6",
                  "Status": "in-sync"
                }
              ],
              "PubliclyAccessible": false,
              "StatusInfos": [],
              "StorageType": "standard",
              "DbInstancePort": 0,
              "StorageEncrypted": false,
              "DbiResourceId": "db-HZTNUFWJZ6ZKTZR2G5Q4SZWJ7I",
              "CACertificateIdentifier": "rds-ca-2015",
              "DomainMemberships": [],
              "CopyTagsToSnapshot": false,
              "MonitoringInterval": 0,
              "DBInstanceArn": "arn:aws:rds:us-west-1:123456789012:db:someapp-123456abc",
              "IAMDatabaseAuthenticationEnabled": false,
              "PerformanceInsightsEnabled": false,
              "EnabledCloudwatchLogsExports": [],
              "ProcessorFeatures": []
            },
            "resourceSummary": {
              "name": "Instance",
              "value": "someapp-123456abc"
            },
            "severity": 0,
            "message": "RDS instance is not encrypted at rest",
            "action": "Enable storage ecryption at rest for the instace"
          }
        ],
        "us-west-2": [],
        "ca-central-1": [],
        "ap-south-1": [],
        "ap-northeast-2": [],
        "ap-southeast-1": [],
        "ap-southeast-2": [],
        "ap-northeast-1": [],
        "eu-central-1": [],
        "eu-west-1": [],
        "eu-west-2": [],
        "sa-east-1": []
      }
    },
    "publically_accessible": {
      "what": "Are there any publically accessible RDS instances?",
      "why": "It is important to restrict RDS instances for private access only for most of the usecases",
      "somedomain.commendation": "somedomain.commended to disable public access for RDS instances",
      "regions": {
        "us-east-2": [],
        "us-east-1": [],
        "us-west-1": [
          {
            "resource": {
              "DBInstanceIdentifier": "someapp-123456abc",
              "DBInstanceClass": "db.t2.micro",
              "Engine": "mysql",
              "DBInstanceStatus": "available",
              "MasterUsername": "mysql_someapp",
              "DBName": "mysqldb",
              "Endpoint": {
                "Address": "someapp-123456abc.1234567abc.us-west-1.rds.somedomain.com",
                "Port": 3306,
                "HostedZoneId": "1234567ANC"
              },
              "AllocatedStorage": 10,
              "InstanceCreateTime": "2018-07-02T09:18:24.661Z",
              "PreferredBackupWindow": "12:13-12:43",
              "BackupRetentionPeriod": 0,
              "DBSecurityGroups": [],
              "VpcSecurityGroups": [
                {
                  "VpcSecurityGroupId": "sg-1234567abc",
                  "Status": "active"
                }
              ],
              "DBParameterGroups": [
                {
                  "DBParameterGroupName": "default.mysql5.6",
                  "ParameterApplyStatus": "in-sync"
                }
              ],
              "AvailabilityZone": "us-west-1c",
              "DBSubnetGroup": {
                "DBSubnetGroupName": "rds_group",
                "DBSubnetGroupDescription": "Managed by someapp",
                "VpcId": "vpc-1234567abc",
                "SubnetGroupStatus": "Complete",
                "Subnets": [
                  {
                    "SubnetIdentifier": "subnet-abc123",
                    "SubnetAvailabilityZone": {
                      "Name": "us-west-1a"
                    },
                    "SubnetStatus": "Active"
                  },
                  {
                    "SubnetIdentifier": "subnet-abc123",
                    "SubnetAvailabilityZone": {
                      "Name": "us-west-1c"
                    },
                    "SubnetStatus": "Active"
                  }
                ]
              },
              "PreferredMaintenanceWindow": "wed:06:11-wed:06:41",
              "PendingModifiedValues": {},
              "MultiAZ": false,
              "EngineVersion": "5.6.39",
              "AutoMinorVersionUpgrade": true,
              "ReadReplicaDBInstanceIdentifiers": [],
              "ReadReplicaDBClusterIdentifiers": [],
              "LicenseModel": "general-public-license",
              "OptionGroupMemberships": [
                {
                  "OptionGroupName": "default:mysql-5-6",
                  "Status": "in-sync"
                }
              ],
              "PubliclyAccessible": false,
              "StatusInfos": [],
              "StorageType": "standard",
              "DbInstancePort": 0,
              "StorageEncrypted": false,
              "DbiResourceId": "db-HZTNUFWJZ6ZKTZR2G5Q4SZWJ7I",
              "CACertificateIdentifier": "rds-ca-2015",
              "DomainMemberships": [],
              "CopyTagsToSnapshot": false,
              "MonitoringInterval": 0,
              "DBInstanceArn": "arn:aws:rds:us-west-1:123456789012:db:someapp-123456abc",
              "IAMDatabaseAuthenticationEnabled": false,
              "PerformanceInsightsEnabled": false,
              "EnabledCloudwatchLogsExports": [],
              "ProcessorFeatures": []
            },
            "resourceSummary": {
              "name": "Instance",
              "value": "someapp-123456abc"
            },
            "severity": 3,
            "message": "RDS instance is not publically accessible"
          }
        ],
        "us-west-2": [],
        "ca-central-1": [],
        "ap-south-1": [],
        "ap-northeast-2": [],
        "ap-southeast-1": [],
        "ap-southeast-2": [],
        "ap-northeast-1": [],
        "eu-central-1": [],
        "eu-west-1": [],
        "eu-west-2": [],
        "sa-east-1": []
      }
    }
  },
  "aws.route53": {},
  "aws.s3": {
    "bucket_access": {
      "what": "Are there any buckets with open access to everyone?",
      "why": "Generally buckets shouldn't allow open access unless there is good usecase",
      "somedomain.commendation": "somedomain.commended to keep bucket acl as restrictive as possible for the business",
      "regions": {
        "global": []
      }
    }
  },
  "aws.trails": {
    "cloud_trails_bucket_access_logs": {
      "what": "Are access logs enabled for buckets containing Cloud Trails?",
      "why": "Cloud trails contains important security information so we need to limit access to them and also enable access logs for such buckets",
      "somedomain.commendation": "somedomain.commended to enable access logs for buckets containing Cloud Trails",
      "regions": {
        "global": [
          {
            "resource": {
              "bucketName": "dev.tensult.cloudtrail",
              "bucketAccessLogs": {}
            },
            "resourceSummary": {
              "name": "Bucket",
              "value": "dev.tensult.cloudtrail"
            },
            "severity": 0,
            "message": "Access logs are not enabled",
            "action": "Enabled access logs"
          }
        ]
      }
    },
    "cloud_trails_bucket_deletes_mfa_enabled": {
      "what": "Is deleting cloud trails protected by MFA?",
      "why": "Cloud trails deletes should be MFA enabled so that attacker won't able to delete them",
      "somedomain.commendation": "somedomain.commended to enable MFA for deleting Cloud Trails",
      "regions": {
        "global": [
          {
            "resource": {
              "bucketName": "dev.tensult.cloudtrail",
              "bucketVersioning": {}
            },
            "resourceSummary": {
              "name": "Bucket",
              "value": "dev.tensult.cloudtrail"
            },
            "severity": 0,
            "message": "Deletes are not MFA enabled",
            "action": "Enable MFADelete"
          }
        ]
      }
    },
    "cloud_trails_enabled": {
      "what": "Is cloud trails enabled for account?",
      "why": "Cloud trails helps understand who did what and this is utmost important when a security breach happens",
      "somedomain.commendation": "somedomain.commended to enable cloud trails for all regions",
      "regions": {
        "us-east-2": [
          {
            "resource": [
              {
                "Name": "cloudtrail-dev",
                "S3BucketName": "dev.tensult.cloudtrail",
                "IncludeGlobalServiceEvents": true,
                "IsMultiRegionTrail": true,
                "HomeRegion": "ap-south-1",
                "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
                "LogFileValidationEnabled": true,
                "HasCustomEventSelectors": false
              }
            ],
            "resourceSummary": {
              "name": "CloudTrails",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Cloud trails are enabled"
          }
        ],
        "us-east-1": [
          {
            "resource": [
              {
                "Name": "cloudtrail-dev",
                "S3BucketName": "dev.tensult.cloudtrail",
                "IncludeGlobalServiceEvents": true,
                "IsMultiRegionTrail": true,
                "HomeRegion": "ap-south-1",
                "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
                "LogFileValidationEnabled": true,
                "HasCustomEventSelectors": false
              }
            ],
            "resourceSummary": {
              "name": "CloudTrails",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Cloud trails are enabled"
          }
        ],
        "us-west-1": [
          {
            "resource": [
              {
                "Name": "cloudtrail-dev",
                "S3BucketName": "dev.tensult.cloudtrail",
                "IncludeGlobalServiceEvents": true,
                "IsMultiRegionTrail": true,
                "HomeRegion": "ap-south-1",
                "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
                "LogFileValidationEnabled": true,
                "HasCustomEventSelectors": false
              }
            ],
            "resourceSummary": {
              "name": "CloudTrails",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Cloud trails are enabled"
          }
        ],
        "us-west-2": [
          {
            "resource": [
              {
                "Name": "cloudtrail-dev",
                "S3BucketName": "dev.tensult.cloudtrail",
                "IncludeGlobalServiceEvents": true,
                "IsMultiRegionTrail": true,
                "HomeRegion": "ap-south-1",
                "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
                "LogFileValidationEnabled": true,
                "HasCustomEventSelectors": false
              }
            ],
            "resourceSummary": {
              "name": "CloudTrails",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Cloud trails are enabled"
          }
        ],
        "ca-central-1": [
          {
            "resource": [
              {
                "Name": "cloudtrail-dev",
                "S3BucketName": "dev.tensult.cloudtrail",
                "IncludeGlobalServiceEvents": true,
                "IsMultiRegionTrail": true,
                "HomeRegion": "ap-south-1",
                "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
                "LogFileValidationEnabled": true,
                "HasCustomEventSelectors": false
              }
            ],
            "resourceSummary": {
              "name": "CloudTrails",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Cloud trails are enabled"
          }
        ],
        "ap-south-1": [
          {
            "resource": [
              {
                "Name": "cloudtrail-dev",
                "S3BucketName": "dev.tensult.cloudtrail",
                "IncludeGlobalServiceEvents": true,
                "IsMultiRegionTrail": true,
                "HomeRegion": "ap-south-1",
                "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
                "LogFileValidationEnabled": true,
                "HasCustomEventSelectors": false
              }
            ],
            "resourceSummary": {
              "name": "CloudTrails",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Cloud trails are enabled"
          }
        ],
        "ap-northeast-2": [
          {
            "resource": [
              {
                "Name": "cloudtrail-dev",
                "S3BucketName": "dev.tensult.cloudtrail",
                "IncludeGlobalServiceEvents": true,
                "IsMultiRegionTrail": true,
                "HomeRegion": "ap-south-1",
                "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
                "LogFileValidationEnabled": true,
                "HasCustomEventSelectors": false
              }
            ],
            "resourceSummary": {
              "name": "CloudTrails",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Cloud trails are enabled"
          }
        ],
        "ap-southeast-1": [
          {
            "resource": [
              {
                "Name": "cloudtrail-dev",
                "S3BucketName": "dev.tensult.cloudtrail",
                "IncludeGlobalServiceEvents": true,
                "IsMultiRegionTrail": true,
                "HomeRegion": "ap-south-1",
                "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
                "LogFileValidationEnabled": true,
                "HasCustomEventSelectors": false
              }
            ],
            "resourceSummary": {
              "name": "CloudTrails",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Cloud trails are enabled"
          }
        ],
        "ap-southeast-2": [
          {
            "resource": [
              {
                "Name": "cloudtrail-dev",
                "S3BucketName": "dev.tensult.cloudtrail",
                "IncludeGlobalServiceEvents": true,
                "IsMultiRegionTrail": true,
                "HomeRegion": "ap-south-1",
                "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
                "LogFileValidationEnabled": true,
                "HasCustomEventSelectors": false
              }
            ],
            "resourceSummary": {
              "name": "CloudTrails",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Cloud trails are enabled"
          }
        ],
        "ap-northeast-1": [
          {
            "resource": [
              {
                "Name": "cloudtrail-dev",
                "S3BucketName": "dev.tensult.cloudtrail",
                "IncludeGlobalServiceEvents": true,
                "IsMultiRegionTrail": true,
                "HomeRegion": "ap-south-1",
                "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
                "LogFileValidationEnabled": true,
                "HasCustomEventSelectors": false
              }
            ],
            "resourceSummary": {
              "name": "CloudTrails",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Cloud trails are enabled"
          }
        ],
        "eu-central-1": [
          {
            "resource": [
              {
                "Name": "cloudtrail-dev",
                "S3BucketName": "dev.tensult.cloudtrail",
                "IncludeGlobalServiceEvents": true,
                "IsMultiRegionTrail": true,
                "HomeRegion": "ap-south-1",
                "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
                "LogFileValidationEnabled": true,
                "HasCustomEventSelectors": false
              }
            ],
            "resourceSummary": {
              "name": "CloudTrails",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Cloud trails are enabled"
          }
        ],
        "eu-west-1": [
          {
            "resource": [
              {
                "Name": "cloudtrail-dev",
                "S3BucketName": "dev.tensult.cloudtrail",
                "IncludeGlobalServiceEvents": true,
                "IsMultiRegionTrail": true,
                "HomeRegion": "ap-south-1",
                "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
                "LogFileValidationEnabled": true,
                "HasCustomEventSelectors": false
              }
            ],
            "resourceSummary": {
              "name": "CloudTrails",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Cloud trails are enabled"
          }
        ],
        "eu-west-2": [
          {
            "resource": [
              {
                "Name": "cloudtrail-dev",
                "S3BucketName": "dev.tensult.cloudtrail",
                "IncludeGlobalServiceEvents": true,
                "IsMultiRegionTrail": true,
                "HomeRegion": "ap-south-1",
                "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
                "LogFileValidationEnabled": true,
                "HasCustomEventSelectors": false
              }
            ],
            "resourceSummary": {
              "name": "CloudTrails",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Cloud trails are enabled"
          }
        ],
        "sa-east-1": [
          {
            "resource": [
              {
                "Name": "cloudtrail-dev",
                "S3BucketName": "dev.tensult.cloudtrail",
                "IncludeGlobalServiceEvents": true,
                "IsMultiRegionTrail": true,
                "HomeRegion": "ap-south-1",
                "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
                "LogFileValidationEnabled": true,
                "HasCustomEventSelectors": false
              }
            ],
            "resourceSummary": {
              "name": "CloudTrails",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Cloud trails are enabled"
          }
        ]
      }
    },
    "cloud_trails_encryption_at_rest": {
      "what": "Are Cloud trails encrypted at rest?",
      "why": "Critical data should always be encrypted at rest",
      "somedomain.commendation": "somedomain.commended to enable encryption at rest for CloudTrails",
      "regions": {
        "us-east-2": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 0,
            "message": "Encryption not enabled",
            "action": "Enable encryption at rest"
          }
        ],
        "us-east-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 0,
            "message": "Encryption not enabled",
            "action": "Enable encryption at rest"
          }
        ],
        "us-west-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 0,
            "message": "Encryption not enabled",
            "action": "Enable encryption at rest"
          }
        ],
        "us-west-2": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 0,
            "message": "Encryption not enabled",
            "action": "Enable encryption at rest"
          }
        ],
        "ca-central-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 0,
            "message": "Encryption not enabled",
            "action": "Enable encryption at rest"
          }
        ],
        "ap-south-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 0,
            "message": "Encryption not enabled",
            "action": "Enable encryption at rest"
          }
        ],
        "ap-northeast-2": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 0,
            "message": "Encryption not enabled",
            "action": "Enable encryption at rest"
          }
        ],
        "ap-southeast-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 0,
            "message": "Encryption not enabled",
            "action": "Enable encryption at rest"
          }
        ],
        "ap-southeast-2": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 0,
            "message": "Encryption not enabled",
            "action": "Enable encryption at rest"
          }
        ],
        "ap-northeast-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 0,
            "message": "Encryption not enabled",
            "action": "Enable encryption at rest"
          }
        ],
        "eu-central-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 0,
            "message": "Encryption not enabled",
            "action": "Enable encryption at rest"
          }
        ],
        "eu-west-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 0,
            "message": "Encryption not enabled",
            "action": "Enable encryption at rest"
          }
        ],
        "eu-west-2": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 0,
            "message": "Encryption not enabled",
            "action": "Enable encryption at rest"
          }
        ],
        "sa-east-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 0,
            "message": "Encryption not enabled",
            "action": "Enable encryption at rest"
          }
        ]
      }
    },
    "cloud_trails_global_service_events": {
      "what": "Are global service events included in CloudTrails?",
      "why": "We need to enable this option to keep track of events from global service like IAM",
      "somedomain.commendation": "somedomain.commended to enable IncludeGlobalServiceEvents for CloudTrails",
      "regions": {
        "us-east-2": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Global service events are included"
          }
        ],
        "us-east-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Global service events are included"
          }
        ],
        "us-west-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Global service events are included"
          }
        ],
        "us-west-2": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Global service events are included"
          }
        ],
        "ca-central-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Global service events are included"
          }
        ],
        "ap-south-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Global service events are included"
          }
        ],
        "ap-northeast-2": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Global service events are included"
          }
        ],
        "ap-southeast-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Global service events are included"
          }
        ],
        "ap-southeast-2": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Global service events are included"
          }
        ],
        "ap-northeast-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Global service events are included"
          }
        ],
        "eu-central-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Global service events are included"
          }
        ],
        "eu-west-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Global service events are included"
          }
        ],
        "eu-west-2": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Global service events are included"
          }
        ],
        "sa-east-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Global service events are included"
          }
        ]
      }
    },
    "cloud_trails_log_validation": {
      "what": "Is log file validation enabled for cloud trails?",
      "why": "Cloud trails helps understand who did what so enabling log file validation keep their integrity intact",
      "somedomain.commendation": "somedomain.commended to enable log file validation for all cloud trails",
      "regions": {
        "us-east-2": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Log validation is enabled for the cloud trail"
          }
        ],
        "us-east-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Log validation is enabled for the cloud trail"
          }
        ],
        "us-west-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Log validation is enabled for the cloud trail"
          }
        ],
        "us-west-2": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Log validation is enabled for the cloud trail"
          }
        ],
        "ca-central-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Log validation is enabled for the cloud trail"
          }
        ],
        "ap-south-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Log validation is enabled for the cloud trail"
          }
        ],
        "ap-northeast-2": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Log validation is enabled for the cloud trail"
          }
        ],
        "ap-southeast-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Log validation is enabled for the cloud trail"
          }
        ],
        "ap-southeast-2": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Log validation is enabled for the cloud trail"
          }
        ],
        "ap-northeast-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Log validation is enabled for the cloud trail"
          }
        ],
        "eu-central-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Log validation is enabled for the cloud trail"
          }
        ],
        "eu-west-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Log validation is enabled for the cloud trail"
          }
        ],
        "eu-west-2": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Log validation is enabled for the cloud trail"
          }
        ],
        "sa-east-1": [
          {
            "resource": {
              "Name": "cloudtrail-dev",
              "S3BucketName": "dev.tensult.cloudtrail",
              "IncludeGlobalServiceEvents": true,
              "IsMultiRegionTrail": true,
              "HomeRegion": "ap-south-1",
              "TrailARN": "arn:aws:cloudtrail:ap-south-1:123456789012:trail/cloudtrail-dev",
              "LogFileValidationEnabled": true,
              "HasCustomEventSelectors": false
            },
            "resourceSummary": {
              "name": "CloudTrail",
              "value": "cloudtrail-dev"
            },
            "severity": 3,
            "message": "Log validation is enabled for the cloud trail"
          }
        ]
      }
    }
  },
  "aws.vpc": {
    "flow_logs_enabled": {
      "what": "Is flow logs enabled for vpc?",
      "why": "VPC flow logs tells about the request patterns and helps to detect security threats",
      "somedomain.commendation": "somedomain.commended to enable flow logs for vpcs",
      "regions": {
        "us-east-2": [],
        "us-east-1": [],
        "us-west-1": [
          {
            "resource": [],
            "resourceSummary": {
              "name": "Vpc",
              "value": "vpc-1234567abc"
            },
            "severity": 0,
            "message": "VPC flow logs are not enabled",
            "action": "Enable vpc flow logs for debugging access requests to the VPC"
          }
        ],
        "us-west-2": [],
        "ca-central-1": [],
        "ap-south-1": [
          {
            "resource": [],
            "resourceSummary": {
              "name": "Vpc",
              "value": "vpc-1234567abc"
            },
            "severity": 0,
            "message": "VPC flow logs are not enabled",
            "action": "Enable vpc flow logs for debugging access requests to the VPC"
          },
          {
            "resource": [],
            "resourceSummary": {
              "name": "Vpc",
              "value": "vpc-1234567abc"
            },
            "severity": 0,
            "message": "VPC flow logs are not enabled",
            "action": "Enable vpc flow logs for debugging access requests to the VPC"
          },
          {
            "resource": [],
            "resourceSummary": {
              "name": "Vpc",
              "value": "vpc-1234567abc"
            },
            "severity": 0,
            "message": "VPC flow logs are not enabled",
            "action": "Enable vpc flow logs for debugging access requests to the VPC"
          }
        ],
        "ap-northeast-2": [],
        "ap-southeast-1": [
          {
            "resource": [
              {
                "CreationTime": "2018-06-07T14:01:10.598Z",
                "DeliverLogsPermissionArn": "arn:aws:iam::123456789012:role/flowlogsRole",
                "FlowLogId": "fl-2257aa4b",
                "FlowLogStatus": "ACTIVE",
                "LogGroupName": "/aws/vpc",
                "ResourceId": "vpc-1234567abc",
                "TrafficType": "ALL"
              }
            ],
            "resourceSummary": {
              "name": "Vpc",
              "value": "vpc-1234567abc"
            },
            "severity": 3,
            "message": "VPC flow logs are enabled"
          },
          {
            "resource": [],
            "resourceSummary": {
              "name": "Vpc",
              "value": "vpc-1234567abc"
            },
            "severity": 0,
            "message": "VPC flow logs are not enabled",
            "action": "Enable vpc flow logs for debugging access requests to the VPC"
          },
          {
            "resource": [],
            "resourceSummary": {
              "name": "Vpc",
              "value": "vpc-1234567abc"
            },
            "severity": 0,
            "message": "VPC flow logs are not enabled",
            "action": "Enable vpc flow logs for debugging access requests to the VPC"
          },
          {
            "resource": [],
            "resourceSummary": {
              "name": "Vpc",
              "value": "vpc-1234567abc"
            },
            "severity": 0,
            "message": "VPC flow logs are not enabled",
            "action": "Enable vpc flow logs for debugging access requests to the VPC"
          }
        ],
        "ap-southeast-2": [],
        "ap-northeast-1": [],
        "eu-central-1": [],
        "eu-west-1": [],
        "eu-west-2": [],
        "sa-east-1": []
      }
    },
    "subnets_with_igw_route": {
      "what": "Which subnets have route to public?",
      "why": "It is important to know which subnets have routes to public and can somedomain.come valnerable to attacks. Also sometimes we misconfigure private subnets with public routes",
      "somedomain.commendation": "somedomain.commended to keep only private routes for private subnets and protect public subnets with network acls",
      "regions": {
        "us-east-2": [],
        "us-east-1": [
          {
            "resource": {
              "subnetName": "default-east-1-1a",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  },
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "172.31.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  },
                  {
                    "DestinationCidrBlock": "0.0.0.0/0",
                    "GatewayId": "igw-abc123",
                    "Origin": "CreateRoute",
                    "State": "active"
                  }
                ],
                "Tags": [],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "default-east-1-1a | subnet-abc123"
            },
            "severity": 1,
            "message": "Subnet has route to the world",
            "action": "If the subnet is private then it shouldn't have route to the world"
          }
        ],
        "us-west-1": [
          {
            "resource": {
              "subnetName": "dms-subnet-abc123",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  },
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "172.20.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  },
                  {
                    "DestinationCidrBlock": "10.0.0.0/16",
                    "Origin": "CreateRoute",
                    "State": "active",
                    "VpcPeeringConnectionId": "pcx-abc123"
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "Peering connection for target VPC"
                  }
                ],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "dms-subnet-abc123 | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          },
          {
            "resource": {
              "subnetName": "dms-subnet-abc123",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  },
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "172.20.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  },
                  {
                    "DestinationCidrBlock": "10.0.0.0/16",
                    "Origin": "CreateRoute",
                    "State": "active",
                    "VpcPeeringConnectionId": "pcx-abc123"
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "Peering connection for target VPC"
                  }
                ],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "dms-subnet-abc123 | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          },
          {
            "resource": {
              "subnetName": "rds-subnet-abc123",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "172.20.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  }
                ],
                "Tags": [],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "rds-subnet-abc123 | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          },
          {
            "resource": {
              "subnetName": "rds-subnet-abc123",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "172.20.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  }
                ],
                "Tags": [],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "rds-subnet-abc123 | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          }
        ],
        "us-west-2": [],
        "ca-central-1": [],
        "ap-south-1": [
          {
            "resource": {
              "subnetName": "sb_shared_1b",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  },
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  },
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  }
                ],
                "PropagatingVgws": [
                  {
                    "GatewayId": "vgw-abc123"
                  }
                ],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "10.20.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "rt_shared"
                  }
                ],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "sb_shared_1b | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          },
          {
            "resource": {
              "subnetName": "sb_secure_In_1a",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  },
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  },
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "10.30.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "rt_secure_In"
                  }
                ],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "sb_secure_In_1a | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          },
          {
            "resource": {
              "subnetName": "sb_secure_out_1a",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  },
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  },
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "10.30.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "rt_secure_In"
                  }
                ],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "sb_secure_out_1a | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          },
          {
            "resource": {
              "subnetName": "sb_secure_App_1a",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  },
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  },
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "10.30.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "rt_secure_In"
                  }
                ],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "sb_secure_App_1a | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          },
          {
            "resource": {
              "subnetName": "sb_Transit_1b",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  },
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  },
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "10.10.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  },
                  {
                    "DestinationCidrBlock": "0.0.0.0/0",
                    "GatewayId": "igw-abc123",
                    "Origin": "CreateRoute",
                    "State": "active"
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "rt_transit"
                  }
                ],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "sb_Transit_1b | subnet-abc123"
            },
            "severity": 1,
            "message": "Subnet has route to the world",
            "action": "If the subnet is private then it shouldn't have route to the world"
          },
          {
            "resource": {
              "subnetName": "sb_Transit-1a",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  },
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  },
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "10.10.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  },
                  {
                    "DestinationCidrBlock": "0.0.0.0/0",
                    "GatewayId": "igw-abc123",
                    "Origin": "CreateRoute",
                    "State": "active"
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "rt_transit"
                  }
                ],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "sb_Transit-1a | subnet-abc123"
            },
            "severity": 1,
            "message": "Subnet has route to the world",
            "action": "If the subnet is private then it shouldn't have route to the world"
          },
          {
            "resource": {
              "subnetName": "default_1b",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  },
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  },
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "172.31.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  },
                  {
                    "DestinationCidrBlock": "0.0.0.0/0",
                    "GatewayId": "igw-abc123",
                    "Origin": "CreateRoute",
                    "State": "active"
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "default-pub"
                  }
                ],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "default_1b | subnet-abc123"
            },
            "severity": 1,
            "message": "Subnet has route to the world",
            "action": "If the subnet is private then it shouldn't have route to the world"
          },
          {
            "resource": {
              "subnetName": "sb_shared_1a",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  },
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  },
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  }
                ],
                "PropagatingVgws": [
                  {
                    "GatewayId": "vgw-abc123"
                  }
                ],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "10.20.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "rt_shared"
                  }
                ],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "sb_shared_1a | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          }
        ],
        "ap-northeast-2": [],
        "ap-southeast-1": [
          {
            "resource": {
              "subnetName": "public 1",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "172.20.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  },
                  {
                    "DestinationCidrBlock": "10.0.0.0/16",
                    "Origin": "CreateRoute",
                    "State": "blackhole",
                    "VpcPeeringConnectionId": "pcx-abc123"
                  },
                  {
                    "DestinationCidrBlock": "0.0.0.0/0",
                    "GatewayId": "igw-abc123",
                    "Origin": "CreateRoute",
                    "State": "active"
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "public replication"
                  }
                ],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "public 1 | subnet-abc123"
            },
            "severity": 1,
            "message": "Subnet has route to the world",
            "action": "If the subnet is private then it shouldn't have route to the world"
          },
          {
            "resource": {
              "subnetName": "private 2",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  },
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "172.16.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "Private"
                  }
                ],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "private 2 | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          },
          {
            "resource": {
              "subnetName": "Private2-Slave",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  },
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  },
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "172.20.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  },
                  {
                    "DestinationCidrBlock": "10.0.0.0/16",
                    "Origin": "CreateRoute",
                    "State": "blackhole",
                    "VpcPeeringConnectionId": "pcx-abc123"
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "DMS"
                  }
                ],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "Private2-Slave | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          },
          {
            "resource": {
              "subnetName": "rds_sub1",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "172.22.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  }
                ],
                "Tags": [],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "rds_sub1 | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          },
          {
            "resource": {
              "subnetName": "Private1-DMS",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  },
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  },
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "172.20.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  },
                  {
                    "DestinationCidrBlock": "10.0.0.0/16",
                    "Origin": "CreateRoute",
                    "State": "blackhole",
                    "VpcPeeringConnectionId": "pcx-abc123"
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "DMS"
                  }
                ],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "Private1-DMS | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          },
          {
            "resource": {
              "subnetName": "replication_sub",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "172.22.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  }
                ],
                "Tags": [],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "replication_sub | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          },
          {
            "resource": {
              "subnetName": "private 1",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  },
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "172.16.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "Private"
                  }
                ],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "private 1 | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          },
          {
            "resource": {
              "subnetName": "public 1",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  },
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "172.16.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "Private"
                  }
                ],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "public 1 | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          },
          {
            "resource": {
              "subnetName": "Private1-Slave",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  },
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  },
                  {
                    "Main": false,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123",
                    "SubnetId": "subnet-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "172.20.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  },
                  {
                    "DestinationCidrBlock": "10.0.0.0/16",
                    "Origin": "CreateRoute",
                    "State": "blackhole",
                    "VpcPeeringConnectionId": "pcx-abc123"
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "DMS"
                  }
                ],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "Private1-Slave | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          },
          {
            "resource": {
              "subnetName": "rds_sub2",
              "id": "subnet-abc123",
              "route_table": {
                "Associations": [
                  {
                    "Main": true,
                    "RouteTableAssociationId": "rtbassoc-abc123",
                    "RouteTableId": "rtb-abc123"
                  }
                ],
                "PropagatingVgws": [],
                "RouteTableId": "rtb-abc123",
                "Routes": [
                  {
                    "DestinationCidrBlock": "172.22.0.0/16",
                    "GatewayId": "local",
                    "Origin": "CreateRouteTable",
                    "State": "active"
                  }
                ],
                "Tags": [],
                "VpcId": "vpc-1234567abc"
              }
            },
            "resourceSummary": {
              "name": "Subnet",
              "value": "rds_sub2 | subnet-abc123"
            },
            "severity": 3,
            "message": "Subnet does not have route to the world"
          }
        ],
        "ap-southeast-2": [],
        "ap-northeast-1": [],
        "eu-central-1": [],
        "eu-west-1": [],
        "eu-west-2": [],
        "sa-east-1": []
      }
    }
  }
}